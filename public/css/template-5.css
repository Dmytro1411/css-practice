:root {
  /* Данные переменные выносятся если их количество в коде более трех
	для упрощения последующего внесения изменений в них
	(не нужно выискивать в коде их местоположение) */
  --space-s: 8px;
  --space-m: 12px;
  --space-xm: 16px;
  --space-l: 24px;
  --space-b: 36px;
  --space-sm: 80px;

  --size-s: 14px;
  --size-d: 16px;
  --size-l: 20px;
  --size-m: 24px;

  --color-border: #dee2e6;
  --color-primary: rgb(46, 46, 255);
  --color-white: #fff;
  --color-title: #212529;
  --color-text: #343a34;
  --color-commit: #6c757d;

  --border-radius-d: 12px;
  --border-radius-s: 4px;
  /* Жирность шрифта */
  --weight-title: 600;
  --weight-text: 400;

  --page-width: 1000px;
}

/* ================================== */

.page {
  background: var(--color-white);
  padding: 0 15px;

  display: flex;
  /* Что бы контент отображался по центру */
  justify-content: center;
}
.page_content {
  max-width: var(--page-width);
  width: 100%;
  display: flex;
  flex-direction: column;

  /* Задаем отступ между элементами */
  gap: var(--space-sm);

  /* продолжаем писать код для позиционирования header после
  его закрепления в шапке страницы*/
  /* padding-top: 74px; */
}

/* ================================== */

.header {
  padding: var(--space-l) 0;
  border-bottom: 1px solid var(--color-border);

  display: flex;
  justify-content: space-between;

  /* Закрепляем header (шапку), что бы при прокручивании
  страницы он постоянно оставался на месте (был видим) */
  /* position: fixed; */
  /* Но при указании position: fixed мы header выводим из кода
  соответствеенно сбивается позиционирование других элементов
  поэтому что бы вернуть заданное ранее позиционирование мы
  прописываем следующий код */
  position: sticky;

  max-width: var(--page-width);
  width: 100%;

  /* Подключение этого свойства данный элемент делает не гибким
  т.е. при изменении размера экрана положение элемента не меняется */
  /* width: var(--page-width); */

  top: 0;
  /* Прописываем код, что бы header всегда был по средине */
  /* left: calc(50% - (var(--page-width) / 2)); */

  /* Дальше для задавания отступов мы переходим в
  page_content */

  background-color: var(--color-white);
  z-index: 1;
}
.footer {
  padding: var(--space-l);
  border-top: 1px solid var(--color-border);

  display: flex;
  justify-content: space-between;
}

.logo {
  font-size: 17px;
  color: var(--color-white);

  background: var(--color-primary);
  width: var(--size-m);
  height: var(--size-m);
  border-radius: calc(var(--border-radius-d) / 2);
  display: flex;
  /* выравнивание по горизонтали */
  justify-content: center;
  /* выравнивание по вертикали */
  align-items: center;
}

.nav {
  display: flex;
}

.nav_inline {
  /* Создаем отступы по горизонтале между ссылками */
  gap: var(--space-l);
}

.nav_vertical {
  /* Создаем отступы по вертикали между ссылками */
  gap: var(--space-xm);
  /* Указываем что при nav_vertical наши ссылки 
	указывались вертикально */
  flex-direction: column;
}

.nav_link {
  color: var(--color-text);
  font-size: var(--size-d);
  text-decoration: none;
  /* Задаем расстояние между строками */
  line-height: 100%;

  transition-property: color;
  transition-duration: 1s;
}
.nav_link:hover {
  text-decoration: underline;
  color: var(--color-primary);
}

.footer {
  padding: var(--space-l);
  border-top: 1px solid var(--color-border);

  display: flex;
  justify-content: space-between;
}

.footer_copyright {
  font-size: var(--size-s);
  color: var(--color-commit);

  display: block;
  margin-top: var(--space-l);
}

.footer_title {
  font-size: var(--size-l);
  color: var(--color-title);
  display: block;
  margin-bottom: var(--space-l);
  font-weight: var(--weight-title);
}

.main {
  display: flex;
  width: 100%;
  align-items: flex-start;

  /* Устанавливаем расстояние между двумя элементами входящих в этот тег, т.е. между message & form 
  согласно файлу с Figma (40px)*/
  gap: 40px;
}

.messages {
  /* Растягиваем пропорции этого элемента по отношению ко второму элементу*/
  /* flex-grow: 2; */
  /* Для более точного указания размеров блоков увеличиваем коэффициенты соотношения */
  /* flex-grow: 20; */
  /* Другой вариант задания розмеров блока */
  max-width: 640px;
  width: 100%;

  background: var(--color-white);
  border-radius: var(--border-radius-d);
  box-shadow: 0px 4px 17px 0px rgba(0, 0, 0, 0.1);
  padding: var(--space-l);
  display: flex;
  flex-direction: column;
  gap: var(--space-l);
}

.messages_title {
  font-size: var(--size-m);
  color: var(--color-title);
  font-weight: var(--weight-text);
  padding-bottom: var(--space-m);
  border-bottom: 1px solid var(--color-border);
}

.messages_link {
  color: var(--color-primary);
  text-align: right;
  font-size: var(--size-s);
  line-height: 19.2px;
  text-decoration-line: none;
  /* Из-за того что (display: flex) вся область с ссылкой стала кликабельной,
  что бы это отменить нужнов в свойствах той переменной (.messages_link) к которой относится ссылка
  прописать следующую конструкцию align-self: flex-end*/
  align-self: flex-end;

  transition-property: opacity, border-bottom;
  transition-duration: 3s;
  border-bottom: 1px solid transparent;
}

.messages_link:hover {
  opacity: 0.5;
  border-color: var(--color-primary);
}

.msg {
  display: flex;
  flex-direction: column;
  gap: var(--space-m);

  padding-bottom: var(--space-m);
  border-bottom: 1px solid var(--color-border);
  /* Задаем свойство для родительского тега, чтобы при указании свойства position для
элемента данный элемент позиционировался не по экрану а по родительскому тегу */
  position: relative;
  padding-right: var(--space-b);
}
.msg_name {
  font-size: var(--size-d);
  color: var(--color-title);
  font-weight: var(--weight-title);
  line-height: var(--size-l);
  width: 215px;
}

.msg_text {
  font-size: var(--size-d);
  color: var(--color-title);
  font-weight: var(--weight-text);

  /* justify-content: center; */
  /* align-self: stretch; */
  /* line-height: 150%; */
}

.msg_day {
  position: absolute;
  right: 0;
  top: 0;
}

.advantages {
  display: flex;
  gap: var(--space-l);
}

.advantages > div {
  display: flex;
  flex-direction: column;
  border: 1px solid #e4eaf2;
  border-radius: var(--border-radius-d);
  gap: var(--space-s);
  padding: var(--space-l);
  /* Данное свойство прописывается для того чтобы элементы
растянулись на максимальную величину и стали одного размера */
  /* width: 100%; */
  /* Но можно сделать и по другому, через :nth-of-type(2) */
}

.advantages > div:nth-of-type(2) {
  flex-grow: 1;
  width: 100%;
}

.advantages > div > strong {
  color: var(--color-title);
  font-weight: var(--weight-title);
  font-size: 18px;
}

.advantages > div > p {
  color: #767676;
  font-size: var(--size-d);
  line-height: 150%;
}

.form {
  /* Растягиваем пропорции первого элемента по отношению к этому элементу*/
  /* flex-grow: 1; */
  /* Тоже что и для message */
  /* flex-grow: 10; */
  /* Это позволит сделать следующее */
  /* flex-grow: 11; */
  /* Другой вариант задания розмеров блока */
  max-width: 320px;
  width: 100%;

  background: var(--color-white);
  border-radius: var(--border-radius-d);
  box-shadow: 0px 4px 15px 0px rgba(0, 0, 0, 0.15);
  padding: var(--space-l);
  display: flex;
  flex-direction: column;
  gap: var(--space-l);
}

.form_title {
  text-align: center;
  font-size: var(--size-m);
  font-weight: var(--weight-text);
  color: var(--color-title);
}

.form_info {
  text-align: center;
  font-size: var(--size-d);
  font-weight: var(--weight-text);
  line-height: var(--space-l);
  color: var(--color-commit);
}

.form_button {
  text-align: center;
  padding: 12px;
  background-color: var(--color-primary);
  color: var(--color-white);
  border-radius: var(--border-radius-s);

  transition: opacity 0.7s;
}

.form_button:hover {
  opacity: 0.7;
}

.form_button:active {
  opacity: 0.3;
}

.form_input_list {
  display: flex;
  flex-direction: column;
  gap: var(--space-m);
}

.form_input_ {
  padding: var(--space-xm);
  border: 1px solid #ced4ce;
  border-radius: var(--border-radius-s);
}

.form_input::placeholder {
  color: var(--color-title);
  font-size: var(--size-d);
}

.form_checkbox {
  display: flex;
  gap: var(--space-s);
  align-items: center;
}

.form_checkbox > input {
  display: none;
}

.form_checkbox > input ~ div {
  border: 1px solid #767676;
  border-radius: 4px;
  height: 13px;
  width: 13px;
}

.form_checkbox > input:checked ~ div {
  border-color: var(--color-primary);
  background-color: var(--color-primary);
}

.form_checkbox > label {
  color: var(--color-title);
  font-size: var(--size-d);
  cursor: pointer;
}
