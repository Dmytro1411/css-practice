:root {
  /* Данные переменные выносятся если их количество в коде более трех
	для упрощения последующего внесения изменений в них
	(не нужно выискивать в коде их местоположение) */
  --space-s: 8px;
  --space-m: 12px;
  --space-xm: 16px;
  --space-l: 24px;
  --space-b: 36px;
  --space-sm: 80px;

  --size-s: 14px;
  --size-d: 16px;
  --size-l: 20px;
  --size-m: 24px;

  --color-border: #dee2e6;
  --color-primary: rgb(46, 46, 255);
  --color-white: #fff;
  --color-title: #212529;
  --color-text: #343a34;
  --color-commit: #6c757d;

  --border-radius-d: 12px;
  --border-radius-s: 4px;
  /* Жирность шрифта */
  --weight-title: 700;
  --weight-text: 400;

  --page-width: 1000px;

  --line-m: 100%;
  --line-d: 120%;

  --width-m: 100%;
}

/* ================================== */

.page {
  background: var(--color-white);
  padding: 0 15px;

  display: flex;
  /* Что бы контент отображался по центру */
  justify-content: center;
}
.page_content {
  max-width: var(--page-width);
  width: var(--width-m);
  display: flex;
  flex-direction: column;

  /* Задаем отступ между элементами */
  gap: var(--space-sm);

  /* продолжаем писать код для позиционирования header после
  его закрепления в шапке страницы*/
  /* padding-top: 74px; */
}

/* ================================== */

.header {
  padding: var(--space-l) 0;
  border-bottom: 1px solid var(--color-border);

  display: flex;
  justify-content: space-between;

  /* Закрепляем header (шапку), что бы при прокручивании
  страницы он постоянно оставался на месте (был видим) */
  /* position: fixed; */
  /* Но при указании position: fixed мы header выводим из кода
  соответствеенно сбивается позиционирование других элементов
  поэтому что бы вернуть заданное ранее позиционирование мы
  прописываем следующий код */
  position: sticky;

  max-width: var(--page-width);
  width: var(--width-m);

  /* Подключение этого свойства данный элемент делает не гибким
  т.е. при изменении размера экрана положение элемента не меняется */
  /* width: var(--page-width); */

  top: 0;
  /* Прописываем код, что бы header всегда был по средине */
  /* left: calc(50% - (var(--page-width) / 2)); */

  /* Дальше для задавания отступов мы переходим в
  page_content */

  background-color: var(--color-white);
  z-index: 1;
}
.footer {
  padding: var(--space-l);
  border-top: 1px solid var(--color-border);

  display: flex;
  justify-content: space-between;
}

.logo {
  font-size: 17px;
  color: var(--color-white);

  background: var(--color-primary);
  width: var(--size-m);
  height: var(--size-m);
  border-radius: calc(var(--border-radius-d) / 2);
  display: flex;
  /* выравнивание по горизонтали */
  justify-content: center;
  /* выравнивание по вертикали */
  align-items: center;
}

.nav {
  display: flex;
}

.nav_inline {
  /* Создаем отступы по горизонтале между ссылками */
  gap: var(--space-l);
}

.nav_vertical {
  /* Создаем отступы по вертикали между ссылками */
  gap: var(--space-xm);
  /* Указываем что при nav_vertical наши ссылки 
	указывались вертикально */
  flex-direction: column;
}

.nav_link {
  color: var(--color-text);
  font-size: var(--size-d);
  text-decoration: none;
  /* Задаем расстояние между строками */
  line-height: var(--line-m);

  transition-property: color;
  transition-duration: 1s;
}
.nav_link:hover {
  text-decoration: underline;
  color: var(--color-primary);
}

.footer {
  padding: var(--space-l);
  border-top: 1px solid var(--color-border);

  display: flex;
  justify-content: space-between;
}

.footer_copyright {
  font-size: var(--size-s);
  color: var(--color-commit);

  display: block;
  margin-top: var(--space-l);
}

.footer_title {
  font-size: var(--size-l);
  color: var(--color-title);
  display: block;
  margin-bottom: var(--space-l);
  font-weight: var(--weight-title);
}

.main {
  display: flex;
  width: var(--width-m);
  align-items: center;
  gap: var(--space-l);
  background: var(--color-white);
}

.info {
  display: flex;
  flex-direction: column;
  max-width: 582px;
  width: var(--width-m);
  gap: var(--space-l);
}

.info_title {
  max-width: 582px;
  width: var(--width-m);
  font-size: 56px;
  line-height: var(--line-d);
  color: var(--color-title);
  font-weight: 700;
}

.info_text {
  max-width: 412px;
  width: var(--width-m);
  font-size: var(--size-m);
  color: var(--color-title);
  font-weight: var(--weight-text);
  line-height: var(--space-b);
  font-style: normal;
}

.form {
  display: flex;
  flex-direction: column;
  padding: 60px 48px;
  width: var(--width-m);
  border-radius: var(--border-radius-s);

  border: 1px solid #dee2e6;
  background: #f8f9fa;
  align-items: flex-start;
  flex: 1 0 0;
  gap: 20px;
}

.form_title {
  text-align: center;
  font-size: var(--size-m);
  font-weight: var(--weight-text);
  color: var(--color-title);
}

.form_info {
  text-align: center;
  font-size: var(--size-s);
  font-style: normal;
  font-weight: var(--weight-text);
  line-height: var(--line-m);
  color: var(--color-commit);
}

.form_button {
  display: flex;
  text-align: center;
  align-items: center;
  justify-content: center;
  align-self: stretch;
  padding: 6px;
  background-color: var(--color-primary);
  color: var(--color-white);

  border-radius: var(--border-radius-s);
  border: 1px solid var(--color-primary);

  transition: opacity 0.7s;
}

.form_button:hover {
  opacity: 0.7;
}

.form_button:active {
  opacity: 0.3;
}

.form_input_list {
  display: flex;
  flex-direction: column;
  width: var(--width-m);

  gap: var(--space-m);
}

.form_input {
  padding: 16px 12px;
  border: 1px solid #ced4ce;
  border-radius: var(--border-radius-s);
}

.form_input::placeholder {
  color: var(--color-title);
  font-size: var(--size-s);
  color: #212529;

  font-style: normal;
  font-weight: var(--weight-text);
  line-height: var(--line-m);
}

.form_checkbox {
  display: flex;
  gap: var(--space-s);
  align-items: center;
}

.form_checkbox > input {
  display: none;
}

/* Свойства ячейки для галочки checkbox */
.form_checkbox > input ~ div {
  border: 1px solid #767676;
  border-radius: 2.5px;
  height: 10px;
  width: 10px;
}

.form_checkbox > input:checked ~ div {
  border-color: var(--color-primary);
  background-color: var(--color-primary);
}

.form_checkbox > label {
  color: var(--color-title);
  font-size: var(--size-s);
  cursor: pointer;
}

.updates {
  display: flex;
  flex-direction: column;
  padding: var(--space-l);

  border-radius: var(--border-radius-s);
  gap: var(--space-l);

  background: #fff;
  box-shadow: 0px 4px 12px 0px rgba(0, 0, 0, 0.05);
}

.updates_title {
  border-bottom: 1px solid var(--color-border);
  padding-bottom: var(--space-m);
  font-size: var(--size-m);
  font-style: normal;
  font-weight: var(--weight-text);
  color: var(--color-title);
}

.updates_content {
  display: flex;
  max-width: 1000px;
  width: 100%;
  align-items: flex-start;
  gap: var(--space-s);
  align-self: stretch;
}

.updates_icon {
  width: 32px;
  height: 32px;
  color: #000;
  font-weight: 400;
}

.updates_icon_text {
  color: #000;
  font-size: 12px;
  font-style: normal;
  font-weight: var(--weight-text);
  line-height: normal;

  position: absolute;
  padding-top: 10px;

  display: inline-flex;
}

.updates_content:nth-child(2) > .updates_icon {
  background: #007bff;
}

.updates_content:nth-child(3) > .updates_icon {
  background: #e83e8c;
}

.updates_content:nth-child(4) > .updates_icon {
  background: #6f42c1;
}

.updates_text {
  display: flex;
  flex-direction: column;
  width: 100%;
  background: var(--color-white);

  align-self: stretch;
  justify-content: center;
  padding-bottom: var(--space-m);
  border-bottom: 1px solid var(--color-border);
  gap: var(--space-m);
}

.updates_name {
  max-width: max-content;
  font-size: var(--size-s);
}

.updates_description {
  font-size: var(--size-d);
  font-weight: var(--weight-text);
  line-height: var(--line-m);
}
.expirience {
  display: flex;

  padding: 24px 28px;
  flex-direction: column;
  align-items: flex-start;

  align-self: stretch;
  gap: var(--space-l);
}

.expirience > div {
  display: flex;
  align-items: flex-end;
  max-width: 1000px;
  width: 100%;
  align-self: stretch;
}

.expirience_title {
  display: flex;
  max-width: 535px;
  width: 100%;
  flex-direction: column;
  color: var(--color-title);
  font-weight: var(--weight-title);
  font-size: 42px;
  font-style: normal;
  line-height: var(--line-d);
}

.expirience_badge_text {
  display: inline-flex;
  /* flex-direction: column; */
  align-items: center;
  padding: var(--space-m) var(--space-l);
  gap: 12px;
  border-radius: 70px;
  background: #ff7347;
  font-size: var(--size-m);
  color: var(--color-white);
  font-weight: var(--weight-title);
  font-style: normal;
  line-height: var(--line-d);
}

.expirience_badge_right {
  align-items: flex-end;

  position: absolute;

  transform: rotate(30deg);
  transform-origin: top right;
  translate: calc(1000px - (38px * 2)) -10px;
}

.expirience_block {
  display: flex;
  align-items: flex-start;
  gap: var(--space-l);
  align-self: stretch;
}

.expirience_content {
  display: flex;
  width: var(--width-m);
  height: 100%;
  flex-direction: column;
  background: var(--color-title);
  border-radius: var(--border-radius-d);
  padding: var(--space-xm);
  gap: 8px;
  flex: 1 0 0;
}

.expirience_name {
  color: var(--color-white);
  font-size: var(--size-l);
  font-style: normal;
  font-weight: var(--weight-title);
  line-height: 26px;
}
.expirience_text {
  color: #b1b1b1;
  font-size: var(--size-d);

  font-family: Inter;
  font-style: normal;
  font-weight: var(--weight-text);
  line-height: 22px;
}
